#   sum1 = int(input('Введите первое число:'))
#   sum2 = int(input('Введите второе число:'))
#   print(sum1, '+', sum2, '=', sum1 + sum2)
#   print(sum1, '-', sum2, '=', sum1 - sum2)
#   print(sum1, '*', sum2, '=', sum1 * sum2)
#   print(sum1, '/', sum2, '=', sum1 / sum2)
#   print(sum1, '//', sum2, '=', sum1 // sum2)
#   print(sum1, '%', sum2, '=', sum1 % sum2)

#   sloj = 4 + 4 + 4
#   minus = 4 - 4 - 4
#   umn = 4 * 4 * 4
#   delen = 4 / 4 / 4
#   delen2 = 4 // 4 // 4
#   delen3 = 4 % 4 % 4
#   stepen = 4 ** 4 ** 4
#   print(stepen)

#   print('''
#   Фамилия: Шамсутдинов
#   Имя:      Анвар
#   Отчество: Гумарович
#   Эл. почта: anvarshamsutdinov02@gmail.com''')
 
#   name = input()
#   print('Привет, ', name, '!')

#   len = float(input('Введите длину: '))
#   width = float(input('Введите ширину: '))
#   print('Площадь вашей комнаты:', len * width, 'кв. метров')

#   a = 'Сидел '
#   b = 'в своей норе '
#   c = 'Барсук '
#   d = 'картошку пюре'
#   print(a + c + b + 'и ел ' + d)

#   a = 'Сидел'
#   b = 'в своей норе'
#   c = 'Барсук'
#   d = 'картошку пюре'
#   print(' '.join([a, c, b, 'и ел', d]))

#   s1 = 'Hello'
#   a2 = 'World'
#   s3 = '%s     %s' % (s1, a2)
#   print(s3)


#  ________________________________________________

#   1) Дана строка, распечатайте первый символ этой строки.
#  stroka = 'Привет, мир!'
#  print(stroka[0])

#   2) Объявите строку и выведите последний символ этой строки
#  stroka = 'Привет, мир!'
#  print(stroka[-1])

#   3) Дана строка, распечатайте последние 2 символа.
#  stroka = 'Привет, мир!'
#  print(stroka[-2::])

#   4) Объявите строку, затем переверните её и распечатайте результат.
#  stroka = 'Привет, мир!'
#  print(stroka[::-1])

#   5) Объявите две строки. Затем склейте их в одну строку через пробел и выведите получившуюся строку.
#  s1 = 'Привет, '
#  s2 = 'мир!'
#  print(s1 + s2)

#   6) Объявите строку и продублируйте ее 4 раза.
#  stroka = 'Привет, мир!'
#  print(stroka * 4)

#   7) Объявите строку и выведите её длину.
#  stroka = 'Привет, мир!'
#  print(len(stroka))

#   8) Дана строка "The quick brown fox jumps over the lazy dog", замените все повторения буквы "o" символом "*"
#  st = "The quick brown fox jumps over the lazy dog"
#  print(st.replace('o', '*'))

#   9) Объявите строку и переведите все её символы в верхний регистр
#  st = "The quick brown fox jumps over the lazy dog"
#  v = st.upper()
#  print(v)

#   10) Объявите строку и переведите все её символы в нижний регистр.
#  st2 = 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'
#  print(st2.lower())

#   11) Дана строка. Обменяйте местами первый и последний символы и выведите результат.
#  st3 = "The quick brown fox jumps over the lazy dog"
#  st3 = list(st3)
#  st3[0], st3[-1] = st3[-1], st3[0]
#  print(''.join(st3))


#   12) Даны несколько хэштегов, разделённых символом ''. Разделите их в отдельные строки. Например: makersbootcampпрограммированиеitкурсы -> ['makers', 'bootcamp', 'программирование', 'it', 'курсы']
#  a = 'makersbootcampпрограммированиеitкурсы'
#  s = a[1:].split('')
#  print(s)

#   13) Запросите у пользователя ввод его имени, фамилии, возраста и города, в котором он проживает. С помощью f-строк выведите краткую информацию о нём, например: "Вас зовут Иван Пупкин, Ваш возраст: 35, Вы проживаете в городе Москва"

#  name, surname, age, city = input('Введите имя: '), input('Введите фамилию: '), int(input('Введите возраст: ')), input('Введите город: ')
#  print(f'Вас зовут {name} {surname}, Ваш возраст: {age}, Вы проживаете в городе {city}')

#   14) Дана строка. Выведите только символы с нечётными индексами при помощи срезов. Например: 'Makers bootcamp' -> 'aesbocm'.

#  st4 = "Makers bootcamp"
#  print(st4[1::2])

#   15) Объявите строку "abracadabra", затем поменяйте шестую букву на "K". Например: "abracadabra" -> abracKdabra.
#  ab = "abracadabra"
#  ab1 = list(ab)
#  ab1[5] = 'K'
#  print(''.join(ab1))

#  a = input().split()
#  print(a)
#  b = a[1] + " " + a[0]
#  print(b)

#  a = list(map(int, input().split()))
#  p = a[::-1]
#  print(''.join(p))


# """
# 1) Проверить введенное пользователем число и если оно больше 5 то вывести “True”, иначе “False”.
# """
#  num = int(input('Введите число: '))
#  print(num > 5)
# """
# 2) Проверить введенные пользователем данные и если длина строки больше или равна 5 символам вывести “True” иначе “False”.
# """
#  stroka = input('Введите фразу')
#  print(len(stroka) >= 5)

# """
# 3) Проверить введенное пользователем значение если оно больше или равно 90, вывести “Отлично ваша оценка 5”, если значение больше или равно 80, вывести “Здорово ваша оценка 4”, если значение больше или равно 70, вывести “Хорошо ваша оценка 3”, если значение больше или равно 60, вывести “Вам стоит подучить материал", в других случаях “вы не сдали экзамен”.
# """
#  num = int(input('Введите значение: '))
#  if num >= 90:
#      print('Отлично ваша оценка 5')
#  elif num >= 80:
#      print('Здорово ваша оценка 4')
#  elif num >= 70:
#      print('Хорошо ваша оценка 3')
#  elif num >= 60:
#      print('Вам стоит подучить материал')
#  else:
#      print('Вы не сдали экзамен')

# """
# 4) Проверить введенное пользователем число если оно отрицательное то вывести “negative”, если положительное то “positive”, если оно равно 0 то вывести “Zero”
# """
#  num = int(input('Введите число: '))
#  if num < 0 and num != 0:
#      print('negative')
#  elif num > 0:
#      print('Positive')
#  else:
#      print('Zero')

# """
# 5) Даны два целых числа. Выведите значение наименьшего из них.
# """
#  a = 4
#  b = 5
#  if a > b:
#      print(b)
#  elif b > a:
#      print(a)
# """
# 6) Даны три целых числа. Выведите значение наименьшего из них.
# """
#  a = 7
#  b = 5
#  c = 9
#  if a < b and a < c:
#      print(a)
#  elif b < a and b < c:
#      print(b)
#  elif c < a and c < b:
#      print(c)
# """
# 7) Даны три целых числа. Определите, сколько среди них совпадающих. Программа должна вывести одно из чисел: 3 (если все совпадают), 2 (если два совпадает) или 0 (если все числа различны).
# """
#  a, b, c = int(input('Введите число 1')), int(input('Введите число 2')), int(input('Введите число 3'))
#  if a == b == c:
#      print('3')
#  elif a == b != c or a != b == c:
#      print('2')
#  else:
#      print('0')
# """
# 8) Вводятся два целых числа. Проверить делится ли первое на второе. Вывести на экран сообщение об этом, частное (в любом случае), а также остаток от деления (если он есть). input: 678 23 
# output: 678 не делится на 23 
# Частное: 29 
# Остаток: 11
# """
#  num1, num2 = int(input()), int(input())
#  c = 0
#  o = 0
#  if num1 % num2 != 0 and num1 != 0 and num2 != 0:
#      print(f'{num1} не делится на {num2}')
#      c = num1 // num2
#      o = num1 % num2
#      print(f'Частное: {c}')
#      print(f'Остаток: {o}')
#  elif num1 % num2 == 0 and num1 != 0 and num2 != 0:
#      c = num1 / num2
#      print(f'Частное {c}')
#  else:
#      print('На ноль делить нельзя')

# """
# 9) Дано номер года. Требуется определить, является ли год с данным номером високосным. Если год является високосным, то выведите YES, иначе выведите NO. Напомним, что в соответствии с григорианским календарем, год является високосным, если его номер кратен 4, но не кратен 100, а также если он кратен 400.
#  """
#  g = int(input('Введите год'))
#  if g % 100 != 0 and g % 4 == 0 or g % 400 == 0:
#      print('YES')
#  else:
#      print('NO')


# """
# 10)  Перевести число, введенное пользователем, в байты или килобайты в зависимости от его выбора.
# """
#  a = int(input('Введите число: '))
#  b = int(input('Если нужно перевести число в байты введите 1,если в килобайты введите 2'))

#  if b == 1:
#      print(a * 1024)
#  elif b == 2:
#      print(a / 1024)




# """ 
# 1) Создайте список при помощи встроенной функции.
# """

#  p = 'Hello'
#  p = list(p)
#  print(p, type(p))

# """
# 2) Дан список list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]. Посчитайте сколько раз встречается (333), (3.1432) и ('n').
# """
#  list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]
#  p3 = list_.count(333)
#  p4 = list_.count(3.1432)
#  p5 = list_.count('n')
#  print(f'''333 встречается: {p3} раза
#  3.1432 встречается: {p4} раза
#  \'n\' встречается: {p5} раза''')


# """
# 3) Дан список list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]. Узнайте под каким индексом лежит (86) и удалите (1546.89).
# """
#  list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]
#  i = list_.index(86)
#  print(f'86 лежит под индексом {i}')
#  list_.remove(1546.89)
#  print(f'мы удалили 1546.89. Вот результат {list_}')


# """
# 4) Дан список list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]. Сперва отсортируйте его по возрастанию, а затем переверните его.
# """

#  list_ = [66.25, 333, 27.5, 86, 3.1432, 1546.89, 333, ]
#  list_.sort()
#  list_.reverse()
#  print(list_)

# """
# 5) Создайте два списка, и расширьте список тремя разными путями.
# """
#  ls1 = ['hello', True, False, 23]
#  ls = [1, 3, 4, 6, 8]

#  1й метод
#  ls.append(5)
#  ls.append(ls1[0])
#  print(ls)

#  2й метод
#  ls.extend('r')
#  ls.extend(ls1[0])
#  print(ls)

#  3 метод
#  ls.insert(0, 'r')
#  ls.insert(3, ls1[0])
#  print(ls)
# """
# 6) Создайте кортеж только с одним элементом и выведите его тип данных.
# """

#  tuple_ = ('j',)
#  print(tuple_, type(tuple_))

# """
# 7) Создайте кортеж при помощи встроенной функции.
# """

#  p = 'привет как двои дела'
#  p = tuple(p)
#  print(p, type(p))

# """ 
# 8)Дан кортеж tuple_ = ('a', 1, 'Hello', True, ['1', 'b']). Возвратите новый кортеж удалив слово 'Hello'.
# """
#  tuple_ = ('a', 1, 'Hello', True, ['1', 'b'])
#  tuple_ = list(tuple_)
#  if 'Hello' in tuple_:
#      tuple_.remove('Hello')
#  print(tuple_)



# """
# 9) Дан кортеж tuple_ = ('b', 1, 'Hello', True, ['False', 'b'], None, ('tuple')). Выведите элементы только с чётными индексами.
# """
#  tuple_ = ('b', 1, 'Hello', True, ['False', 'b'], None, ('tuple'))
#  for i in range(len(tuple_)):
#      if tuple_.index(tuple_[i]) % 2 == 0:
#          print('Этот элементы с четным ииндексом: ', tuple_[i])
    



#  letters = 'ЫгВЫоЯСремДШНККАыкЩЙФа'
#  let = ''
#  for letter in letters:
#      if letter.islower():
#           print(letter)
#          let += letter
#  print(let)


#  list_ = ['Мавпродош', 'Лорнектиф', 'Древерол', 'Фиригарпиг', 'Клодобродыч']
#  name = input('Введите свое имя:')
#  if name in list_:
#      print(f'Ты свой. Приветствую, любезный {name}!')
#  else:
#      print('Тут ничего нет. Еще есть вопросы?')


#  a = int(input('Введите число:'))
#  list_ = []
#  for i in range (1, a + 1):
#      if a % i == 0:
#          list_.append(i)
#   list_.sort()
#  print(list_)        



# _____________________________________________________________________
#  a = map(int, input().split())
#  a = list(a)
#  count = 0
#  for i in range(len(a)):
#      count += a[i]
#      if a[i] == 0:
#          break
#      if a[0] == 0:
#          print('Первое число не может быть "0"')
#          break
#  print(f'Среднее значение: {count / len(a)}')

#  1_________________________________________________________________________
#  s = 0
#  c = 0
#  d = []
#  count = 0
#  while s < 2:
#      a = int(input('Введите число:'))
#      d.append(a)
#      if a == 0:
#          break
#      if a != 0:
#          count += a
#          c += 1
#  if d[0] != 0:
#      print(f'Среднее арифметическое число: {count / c}')
#  else:
#      print('На ноль делить нельзя')

#  3_____________________________________________________________________
#  a = []
#  faren = 0
#  for i in range(100):
#      if i % 10 == 0:
#          a.append(i)
#  for u in a:
#      faren = u * 9 / 5 + 32 
#      print(f'{u} градусов по Цельсию это {faren} градусов по Фаренгейту')

#  4_____________________________________________________________

#  fizz = ['мышка', 'слон', 'кошка', 'мартышка']
#  a = True
#  while a:
#      b = int(input('напиши цифру:'))
#      if b % 3 == 0:
#          print(fizz[random.randint(1, len(fizz) + 1)])
#      if b % 3 != 0:
#          v = b + 1


#  5__________________________________________________________________

#  alph = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
#  b = []
#  a = input('Введите шифруимое слово слово: ')
#  a = a.lower()
#   Цикл для шифровки слова
#  for i in a:
#      if i in alph:
#          b.append(alph[alph.index(i) + 3])
#  print(b)

#  a2 = input('Введите слово для расшифровки: ')
#  a2 = a2.lower()
#  v = []
#   цикл для расшифровки слова
#  for i in b:
#      if i in alph:
#          v.append(alph[alph.index(i) - 3])
#  print(v)





#  def test_funk(word):
#      print(word, end = '')
#      print('!')


#  test_funk('Anvar')


#  def sum(a, b):
#      res = a + b
#       print('result:', res)
#      return res
#  res = sum(5, 7)
#  print(res)
#   sum('h', 'i')

#  nums1 = [3, 4, 5, 21, 3]
#  min = nums1[0]
#  for i in nums1:
#      if i < min:
#          min = i
#  print(min)



#  def minimal(list_):
#      min_num = list_[0]
#      for i in list_:
#          if i < min_num:
#               min_num = i
    
#      return min_num

#  list_ = [3, 4, 5, 2, 3.4, 9, 1.2, 1.3, 21, 3]
#  print(minimal(list_))

#  def shifr(alph):
#      a = ('абвгдеёжзиклмнопрстуфхчшщъыьэ')
#      b = []
#      for i in alph:
#          if i in a:
#              b.append(a[alph.index(i) + 3])
#       print(b)
#      return b

#  print(shifr(input('Введите шифруемое слово: ')))

# """
# 1) Создайте словарь тремя возможными способами.
# """
#  a = {1: '56'} 1
#  b = ''        2
#  b = dict(b)


# """
# 2) Объявите словарь, удалите один из элементов и распечатайте удалённый элемент.
# """
#  a = {'name': 'Anvar', 'surname': 'Shamsutdinov'}
#  delete = a.pop('name')
#  print(a)
#  print(delete)
# """
# 3) Объявите словарь, добавьте в него новую пару - "ключ: значение" и распечатайте.
# """
#  a = {'name': 'Anvar', 'surname': 'Shamsutdinov'}
#  a['age'] = 21
#  print(a)


# """
# 4) Объявите словарь, удалите всего его элементы и распечатайте.
# """
#  a = {'name': 'Anvar', 'surname': 'Shamsutdinov'}
#  a.clear()
#  print(a)


# """
# 5) Дан словарь, выведите все его ключи.
# """
#  a = {'name': 'Anvar', 'surname': 'Shamsutdinov'}
#  for k in a:
#      print(k)

# """
# 6)  Объявите словарь, сделайте его копию и распечатайте 
# """
#  a = {'name': 'Anvar', 'surname': 'Shamsutdinov'}
#  b = a.copy()
#  print(b)

# """
# 7) Это меню вашего ресторана (ключ -- название блюда, значение -- стоимость):
# • menu = {'Pad Thai': 200, 'Tom Yam': 170, 'Chicken Teriyaki': 250}
# • Добавьте в меню новое блюдо 'Fried Rice' и установите стоимость 150
# • Вы решили, что 'Tom Yam' слишком дешевый. Установите новую цену для него: 195
# • Ваш повар отвратительно готовит 'Pad Thai', поэтому хотите удалить это блюдо.
# • Самостоятельно найдите оператор, который удаляет пару “ключ”:”значение”, и удалите 'Pad Thai' из меню.
# • Выведите оставшиеся блюда
# """
#  menu = {'Pad Thai': 200, 'Tom Yam': 170, 'Chicken Teriyaki': 250}
#  menu['Fried Rice'] = 150
#  menu['Tom Yam'] = 195
#  menu.pop('Pad Thai')
#  for i in menu:
#      print(i)


# """
# 😍 Дан словарь, состоящий из элементов типа: слово-синоним. Все слова в словаре различны. Выведите синоним для последнего слова.
# Пример : {‘hello’: ‘hi’, ‘good’: ‘nice’, ‘price’: ‘cost’} --> cost
# """
#  a = {'hello': 'hi', 'good': 'nice', 'price': 'cost'}
#  print(a['price'])
# """
# 9) Создайте три словаря где будут собраны характеристики некоторых животных, затем выведите краткое описание животных.
# Пример : dog = {‘name’: ‘Lucky’, ‘age’: 5, 'eyes': 'blue' } --> This is a dog. His name is Lucky. It has blue eyes. Lucky is 2 years old. 
#  """
#  dog = {'name': 'lucky', 'age': 5, 'eyes': 'blue'}
#  print(f'This is a dog. His name is {dog["name"]}. It has {dog["eyes"]} eyes. Lucky is {dog["age"]} years old.')

#  dog1 = {'name': 'Bobik', 'age': 117, 'eyes': 'red'}
#  print(f'This is a dog. His name is {dog1["name"]}. It has {dog1["eyes"]} eyes. Lucky is {dog1["age"]} years old.')

#  dog2 = {'name': 'Nevsky', 'age': 45, 'eyes': 'green'}
#  print(f'This is a dog. His name is {dog2["name"]}. It has {dog2["eyes"]} eyes. Lucky is {dog2["age"]} years old.')
# """
# 10) Создайте словарь в котором будет содержаться информация о факультетах и учениках, ключом будет факультет, а значением список с несколькими учениками. 
# Используйте одно имя из списка, который является значением у словаря, для выведения утверждения об этом ученике.
# Пример : {'Civil Engineering': ['Thomas', 'Benjamin', 'Franklin'], 'Psycology': ['Joe', 'Chedwick', 'Helena']}
# --> This is Franklin. He studies Civil Engineering. 
# """
#  fac = {'Civil Engineering': ['Thomas', 'Benjamin', 'Franklin'], 'Psycology': ['Joe', 'Chedwick', 'Helena']}


#  a = input(': ')

#  for k, v in fac.items():
#      if a in v:
#          print(f'his is {a}. He studies {k}')


#  _____________________________________________________


# """
# 1) Создайте список изпользуя циклы.
# """
#  b = []
#  for i in range(10):
#      b.append(i)
#  print(b)
# """
# 2) Дан список из чисел, запишите чётные числа в один лист а нечётные в другой лист и выведите результат.
# """
#  a = [3, 6, 1, 13, 45, 67, 88]
#  chet = []
#  nechet = []
#  for i in a:
#      if i % 2 == 0:
#          chet.append(i)
#      else:
#          nechet.append(i)
#  print(f' Четные числа: {chet}')
#  print(f' Нечетные числа: {nechet}')

# """
# 3) Напишите программу, которая найдет факториал введенного числа.
# """
#  a = int(input('Введите число: '))
#  import math
#  print(f'Факториал числа {a}:{math.factorial(a)}')


# """
# 4) Напишите программу, которая будет находить наибольшую цифру натурального
# числа. Натуральное число вводится с клавиатуры. Найти его наибольшую цифру.

# """

#  num = input('Введите число: ')
#  max = int(num[0])
#  for i in num:
#      i = int(i)
#      if i > max:
#          max = i
#  print(max)
# """
# 5) Вам дан список из чисел. Напишите программу в котором вам необходимо найти факториал каждого
# числа и записать в новый список.
# """
#  a = [34, 12, 3, 6, 5, 1]
#  b = []
#  import math
#  for i in a:
#      b.append(math.factorial(i))
#  print(b)

# """
# 6) Вам дан список из чисел. Напишите скрипт в котором она запишет в новый список.
# """
#  a = [34, 12, 3, 6, 5, 1]
#  b = []
#  for i in a:
#      b.append(i)
#  print(b)
# """
# 7) Создайте пустой список. Напишите программу которая должна 
# записывать в ваш список числа от 0 до 10 включительно.
# """
#  a = []
#  for i in range(11):
#      a.append(i)
#  print(a)
# """
# 😍 Вам дан список целых чисел. Напишите программу
# которая выводит все элементы которые меньше 7.
# """
#  a = [34, 12, 3, 6, 7, 5, 1]
#  for i in a:
#      if i < 7:
#          print(i)


#  ______________________________________________________________________
# """
# 1) Мурат с друзьями на выходных решил собраться и пойти в ночной клуб.
# Но в ночной клуб пропускают только тех, кому 17+.
# Мурату - 24 года, Эржану - 21 год, Карине - 24 года, Алтынай - 17 лет, Айбеку - 16 лет.
# Напишите программу, которая определяет кого пустить в ночной клуб, а кого нет. (работа со словарем)
# """
#  dict_ = {'Мурат': 24, 'Эржан': 21, 'Карина': 24, 'Алтынай': 17,'Айбек': 16}
#  for k, v in dict_.items():
#      if v >= 17:
#          print(f'{k} вам разрешено входить!')
#      else:
#          print(f'{k} не допущен')

# """
# 2) Задание 
# Запросите у пользователя число от 1 до 10 в переменную n. Затем пройдитесь по промежутку чисел от 1 до 500(включительно) и запишите в словарь dict_, только те числа, которые кратны числу n (делятся на число n без остатка), введенное пользователем. Ключом будет само число, а значением его квадрат.
# """
#  n = int(input('Введите число от 1 до 10'))
#  dict_ = {x: x ** 2 
#          for x in range(1, 501) 
#          if x % n == 0}
#  print(dict_)

# """
# Задания по comprehensions.
# """
# """
# 1) Создайте список из целых чисел от 1 до 100.
# """
#  list_ = [x for x in range(1, 101)]
#  print(list_)
# """
# 2) Создайте список из нечётных целых чисел в промежутке от 1 до 50.
# """
#  list_ = [x for x in range(1, 51) if x % 2 != 0]
#  print(list_)
# """
# 3) Создайте список используя int_list = [-4, -3, -2, -1, 0, 1, 2, 3, 4] и запишите в новый список только четные числа, которые больше нуля.
# """
#  int_list = [-4, -3, -2, -1, 0, 1, 2, 3, 4]
#  a = [x for x in int_list if x > 0 and x % 2 == 0]
#  print(a)

# """
# 4) Создайте список из квадратов всех чисел от 1 до 25 (включительно).
# """
#  list_ = [x ** 2 for x in range(1, 26)]
#  print(list_)
# """
# 5) Объявите новый список str_list = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] и конвертируйте строковые данные в целочисленные.
# """
#  str_list = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
#  int_list = [int(x) for x in str_list 
#              if type(x) == str]
#  print(int_list)
# """
# 6)  Пройдитесь по промежутку чисел от 1 до 10 (включительно), если число нечётное, запишите в список само число, если же чётное, то квадрат этого числа.
# """
#  list_ = [x if x % 2 != 0 else x ** 2 for x in range(1, 11)]
#  print(list_)
# """
# 7) Пройдитесь по промежутку чисел от 1 до 10 и запишите в список True, если число чётное и False в противном случае.
# """
#  list_ = [True if x % 2 == 0 else False for x in range(1, 10)]
#  print(list_)
# """
# 8) Создайте список из 10 произвольных имён, затем пройдитесь по данному списку и если имя состоит меньше чем из 4 букв замените имя на 'shorter', а если больше на 'longer'.
# """
#  names = ['Алтай', 'Анвар', 'Марлен', 'Асылбек', 'Адилет', 'Каныбек', 'Даурен', 'Артем', 'Аскат', 'Атай']
#  names_ = ['shorter' if len(x) <= 4 else 'longer' for x in names]
#  print(names_)

# """
# 9) Дан словарь, в котором ключом является имя студента, а значением словарь с его оценками по 3 предметам. Замените оценки названием предмета, по которому студент имеет высший балл. Например: a = {'John': {'history': 90, 'math': 95, 'literature': 91}, 'Rose': {'history': 92, 'math': 96, 'literature': 81}, 'Kelly': {'history': 84, 'math': 85, 'literature': 87}}
# -Результат: {'John': 'math', 'Rose': 'math', 'Kelly': 'literature'}
# """
#  a = {'John': {'history': 90, 'math': 95, 'literature': 91}, 'Rose': {'history': 92, 'math': 96, 'literature': 81}, 'Kelly': {'history': 84, 'math': 85, 'literature': 87}}

#  for k, v in a.items():
#      val = max(v.values())
#      for c, b in v.items():
#          if b == val:
#              a[k] = c

#  print(a)

#  d = {k: c 
#  for k, v in a.items() 
#      for c, b in v.items() 
#          if b == max(v.values())}
#  print(d)



# """
# 10) Дан словарь, значениями в котором являются другие словари. Замените внутренние словари их значениями. Например: my_dict = {'first': {'a': 1}, 'second': {'b': 2}} -> {'first': 1, 'second': 2}
# """
#  my_dict = {'first': {'a': 1}, 'second': {'b': 2}}
#  my = {k: v 
#          for k, y in my_dict.items() 
#              for c, v in y.items()}
#  print(my)


#  -_____________________________________________________________________

# '''Назовем число красивым, если оно является четырехзначным и делится нацело на 7 или на 17. Напишите программу, определяющую, является ли введённое число красивым. Программа должна вывести «YES», если число является красивым, или «NO» в противном случае.
# Формат входных данных
# На вход программе подаётся натуральное число.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.'''

#  a = int(input())

#  if 999 < a < 10000 and a % 7 == 0 or a % 17 == 0:
#      print('YES')
#  elif -10000 < a < -999 and a % 7 == 0 or a % 17 == 0:
#      print('YES')
#  else:
#      print('NO')

# '''Цикл. Игра угадай число.
# Создать с использованием Цикла While. У человека 8 попыток, число от 0 до 100. Если число которые ввел пользователь больше рандомного числа выводиться "Загаданое число меньше вашего", а если меньше то "Загаданое число больше вашего".
# from random import randint //Импорт функции randint из random
# randint(1,100)
# break // Выход из цикла'''
# import random

#  i = 0
#  while i < 8:
#      ran = random.randint(0, 100)
#      a = int(input())
#      print(f'рандомное число {ran}')
#      if a > ran:
#          print('Загаданое число меньше вашего')
#      else:
#          print('Загаданое число больше вашего')
#      i += 1

#  _____________________________________________________
# """
# Задания по исключениям.
# """
# """
# 1) Опишите полный синтаксис конструкции try-except:
# """
#  Try проверяет код на наличие ошибки, в нашем случае ошибка может быть только ValueError(можем ввести вместо цифры букву и тд).. Если есть ошибка рода ValueError то except , то он принтует, если ошибки нет то срабатывает else, а finally работает в любом случае)
#  try:                  
#      a = int(input('Введите число: '))
#  except ValueError:
#      print('Vvodite tolko chislo!')
#  else:
#      print(f'квадрат числа {a} = {a ** 2}')
#  finally:
#      print('Poka!')

    
# """
# 2) Дан следующий код:
# b = 10
# c = 11
# print(a)
# Обработайте ошибку, которая может возникнуть.
# """
#  try:
#      b = 10
#      c = 11
#      print(a)
#  except NameError:
#      print('Вы принтуете не ту переменную!')
# """
# 3) Напишите программу которая будет получать два числа через input и делить одно на другое. Обработайте ошибку, которая возникнет в случае, если второе число окажется 0 и выведите сообщение.
# """
#  try:
#      num1, num2 = int(input('Введите число 1: ')), int(input('Введите число 2: '))
#      print(num1 / num2)

#  except ZeroDivisionError:
#      print('На ноль делить нельзя!')



# '4) Напишите программу, которая будет получать через инпут 2 числа и будет печатать их сумму. Обработайте ошибку, которая возникнет, если пользователь введёт не числовое значение и выведите сообщение.'
#  try:
#      num1, num2 = int(input('Введите число 1: ')), int(input('Введите число 2: '))
#      print(num1 + num2)
#  except ValueError:
#      print('Вы ввели не число!')



# """
# 5) Дан словарь. Попытайтесь получить значение по ключу. Обработайте ошибку, возникающую в том случае, если запрашиваемый ключ не существует.
# """
#  dict_ = {1: 'one', 2: 'two', 3: 'three'}
#  try:
#      key = int(input('vvedite key: '))
#      print(dict_[key])
#  except KeyError:
#      print('Такого ключа нет!')
# """
# 6)  Дан список. Обработайте исключение при попытке обращения к несуществующему элементу.
# """
#  ls = [1, 2, 3, 4, 5]
#  try:
#      print(ls[1])
#  except IndexError:
#      print('Такого элемента нет!')
# """
# 7) Попытайтесь в блоке try принять 2 числа и разделить одно на другое. В блоке except обработайте сразу 2 возможных исключения.
# """
#  try:
#      num1, num2 = int(input('Введите число 1: ')), int(input('Введите число 2: '))
#      print(num1 / num2)
#  except ValueError:
#      print('Вводите только цифры!')
#  except ZeroDivisionError:
#      print('На ноль делить нельзя!')

# """
# 😍 Запросите у пользователя сумму, которая у него сейчас есть в бумажнике. Если он введёт сумму, меньшую чем 0, то выбросите исключение с текстом "Сумма не может быть отрицательной!"
# """
#  try:
#      sum = int(input('Сколько у тебя в кошельке? '))
#      if sum < 0:
#          fsfe
#  except:
#      print('Сумма ее может быть отрицательной!')

# """
# 9)  В блоке try запросите у пользователя ввод его возраста. Затем в том же блоке проверьте его возраст на совершеннолетие. Если пользователь несовершеннолетний, выбросите исключение с текстом "Доступ запрещён". Обработайте также исключение если пользователь вводит текст вместо числа с сообщением 'Введен некорректный возраст'. Если ошибок не возникло, то распечатайте сообщение "Спасибо!", а затем "До свидания", вне зависимости от того, произошла ошибка или нет.
# """
#  try:
#      age = int(input('Введите свой возраст: '))
#      if age < 18:
#          asd
#  except NameError:
#      print('Доступ запрещен')
#  except ValueError:
#      print('Введен некорректный возраст')
#  else:
#      print('Спасибо!')
#  finally:
#      print('До свидания!')


#  ---------------------------------------------------------
# """
# 1) Создайте функцию, которая будет принимать 2 числа, складывать их и возвращать результат сложения.
# """
#  def sum(a, b: int) -> int:
#      '''Принимает два аргумента и выводит их сумму'''
#      print(f'Сумма {a} и {b} = {a + b}')
#  sum(4, 5)


# """
# 2) Создайте функцию, которая будет принимать строку. Функция должна выводить длину этой строки(не использовать функцию len).
# """
#  def len_(a: str) -> int:
#      '''Определяет длину строки'''
#      l = 0
#      for i in a:
#          l += 1
#      return(l)
#  print(len_('Hello'))
# """
# 3) Создайте функцию, которая принимает два обязательных параметра. Задача этой функции выводить тип принятых аргументов.
# """
#  def t(a, b):
#      print(type(a))
#      print(type(b))
#  t(5, 'ad')
# """
# 4) Создайте функцию, которая должна принимать 2 числа и возвращать результат их деления.
# """
#  def delen(a, b: int) -> int:
#      print(a/b)
#  delen(4, 2)
# """
# 5) Создайте функцию, которая принимает словарь. Пройдитесь по словарю циклом и распечатайте все его ключи
# """
#  def k(**keys_: dict):
#      for i in keys_:
#          print(i)
#  k(a='четыре', b='Four')

# """
# 6) Создайте функцию, которая принимает и выводит "It's odd number" если это число не кратно двум и "It's even number" в противном случае.
# """
#  def num(a):
#      return "It's odd number" if a % 2 != 0 else "It's even number"
#  print(num(2))
# """
# 7) Напишите функцию, которая будет принимать строку и проверять является ли она палиндромом. Пробелы и регистр учитывать не нужно.
# (Палиндро́м, пе́ревертень — число, буквосочетание, слово или текст, одинаково читающееся в обоих направлениях. Например, число 101; слова "кок", "топот", "комок" и т.д.)
# """
#  def palin(a):
#      a.lower()
#      return True if a == a[::-1] else False
#  print(palin('кок'))
# """
# 😍 Создайте функцию которая принимает от пользователя два числа. Она должна сравнить эти числа между собой и вывести максимальное значение.
# """
#  def maxim(a, b):
#      if a > b:
#          return a
#      elif b > a:
#          return b
#      else:
#          print('Числа равны')
#  print(maxim(4, 4))
# """
# 9) Напишите функцию, которая принимает список чисел и возвращает их произведение.
# """
#  def summa(*s):
#      count = 0
#      for i in s:
#          count += i
#      return count
#  print(summa(4, 2, 5, 2, 1))
# """
# 10) Напишите функцию, которая принимает целое число и возвращает сумму всех его цифр. Например, число 123 --> 6
# """
#  def sum_el(a):
#      count = 0
#      a = list(str(a))
#      for i in a:
#          count += int(i)
#      return count
#  print(sum_el(234579))



#   ---------------------------------------------------
#  def chat_bot(a='Как классно, когда ты молчишь. Продолжай в том же духе!'):
    
#      if a[-1] == '?':
#          return 'Конечно!'
#      elif a[-1] == '!' and a.isupper():
#          return 'Успакойся'
#      elif a == 'Как классно, когда ты молчишь. Продолжай в том же духе!':
#          return a
#      else:
#          return 'ну и что'
    
#  print(chat_bot('d?'))



# ----------------------------------------------------------
#  def izo(a):
#      c = 0
#      for i in a:
#          if a.count(i) > 1:
#              c += 1
#      return True if c == 0 else False
#  print(izo('aaaaa'))

        
#  -------------------------------------------------------

#  def op(a):
#      b = []
#      v = []
#      a = a.split()
#      print(a)
#      for i in a:
#          if i[-1] == ',':
#              i = i[0:-1]
#          i = i.lower()
#          v.append(i) 
#          if i in b:
#              continue
#          else:
#              b.append(i) 

#      for sl in b:
#          print(f'{sl}: {v.count(sl)}')



#  op('Money, money, money, it’s always sunny, in the richmen’s world')

#  ________________________________________________________
# """
# 1) У Ирины футболки 2 цветов. Ирина одевает красную футболку в чётные числа месяца, а синюю в нечётные. Напишите программу, которая по введённому числу месяца определяет какую футболку нужно одеть Ирине сегодня.
# """
#  def fut(n):
#      if 0 < n < 13:
#          return 'Красная футболка' if n % 2 == 0 else 'Синяя футболка'
#      else:
#          print('Такого месяца нет!')

#  n = int(input('Введите номер месяца'))
#  print(fut(n)) писать код здесь
# """
# 2) Пользователь должен ввести 2 целых числа, Вам необходимо проверить делится ли первое число на второе. Вывести результат, а также остаток от деления (если есть).
# """

#  def delen(a, b):
#      if a % b == 0:
#          print(f'Делится!, резултат деления { a // b}')
#      else:
#          print(f'Не делится!, остаток от деления {a % b}')
#  delen(int(input('Введите число 1: ')), int(input('Введите число 2: ')))
# """
# 3) Вам дано три числа, используйте условные операторы и выведите на экран наибольшое из них.
# """
#  a, b, c = int(input('Введите число: ')), int(input('Введите число: ')), int(input('Введите число: '))
#  if a > b > c:
#      print(f'Самое большое число {a}')
#  elif a < b < c:
#      print(f'Самое большое число {c}')
#  elif a < b > c:
#      print(f'Самое большое число {b}')
#  else:
#      print('Ошибка!')


# """
# 4) Вам дан список из чисел. Напишите функцию, которая вернёт новый список из квадратов этих чисел.
# """
#  ls_ = [1, 2, 3, 4, 5]
#  def kv(a):
#      b = []
#      for i in a:
#          b.append(i**2)
#      return b
#  print(kv(ls_))
# """
# 5) Вам дан список из целых чисел. Напишите функцию, в которой Вам необходимо найти факториал каждого из чисел и записать в новый список.
# """
#  ls_ = [1, 2, 3, 4, 5]
#  def fac(a):
#      b = []
#      f = 0
#      for i in a:
#          for u in range(i + 1):
#              f += u
#          b.append(f)
#          f = 0
#      return b
#  print(fac(ls_))
# """
# 6) Мурат с друзьями на выходных решил собратся и пойти в ночной клуб.
# Но в ночной клуб пропускают только тех, кому 17+.
# Мурату - 24, Эржану - 21, Чынгызу - 24, Алтынай - 17, Асеме - 16.
# Напишите программу которая определяет кого пустить в ночной клуб, а кого нет.
# """
#  dict_ = {'Мурат': 24, 'Эржан': 21, 'Чынгыз': 24, 'Алтынай': 17, 'Асема': 16}
#  def prop():
#      for k, v in dict_.items():
#          if v >= 17:
#              print(f'{k}, тебе сюда можно!')
#          else:
#              print(f'{k}, тебе сюда нельзя!')
#  prop()
# """
# 7) Вам дан список из нескольких имён в нижнем регистре. Напишите функцию которая записывает начинает первую букву имени в верхнем регистре и сохраните в новом списке.
# """
#  ls_ = ['анвар', 'салих', 'ахмат']
#  def r(a):
#      b = []
#      for i in a:
#          b.append(i[0].upper())
#      return(b)
#  print(r(ls_))
# """
# 😍 Напишите функцию, которая принимает строку и выводит количество гласных, согласных букв и остальных символов. Используйте только кириллические символы
# """
#  glas = 'уеыаоэяию'
#  sogl = 'йцкнгшщзхъфвпрлджчсмтьб'
#  def zv(a):
#      g = 0
#      s = 0
#      sym = 0
#      for i in a:
#          i = i.lower()
#          if i in glas:
#              g += 1
#          elif i in sogl:
#              s += 1
#          elif i not in sogl and i not in glas and i != ' ':
#              sym += 1
#      print(f'Количество гласных звуков: {g} \nСогласных: {s} \nСимволов: {sym}')
#  print(zv('Привет как твои дела'))
    
# """
# 9) Создайте пустой список. Напишите программу которая должна записывать в Ваш список числа от 0 до 10 включительно.
# """
#  ls_ = [i for i in range(0,11)]
#  print(ls_)
# """
# 10) Вам дан список целых чисел. Напишите программу которая выводит все элементы, которые меньше 7. 
# """
#  ls_ = [1, 24, 23, 5, 2, 67, 21]
#  ls1 = [x for x in ls_ if x < 7]
#  print(ls1)
# """
# 11) Напишите функцию, которая будет принимать строку и проверять является ли она палиндромом. Пробелы и регистр учитывать не нужно.
# (Палиндро́м, пе́ревертень — число, буквосочетание, слово или текст, одинаково читающееся в обоих направлениях. Например, число 101; слова "кок", "топот", "комок" и т.д.)
# """
#   def palin(a):
#      a.lower()
#      return True if a == a[::-1] else False
#  print(palin('кок'))

# """
# 12) Создайте функцию которая принимает от пользователя два числа. Она должна сравнить эти числа между собой и вывести максимальное значение.
# """
#  def a(b, c):
#      return b if b > c else c
#  print(a(3, 5))






'''1) Напишите декоратор, который проверяет, что функция вызывается с определенными типами аргументов.'''

# def dec(func):
#     def wrapper(*args, **kwargs):
#         sch = True
#         for i in func(*args):
#             if type(i) != type(func(*args)[0]):
#                 sch = False
#         print(sch)
#     return wrapper

# @dec
# def f(*args, **kwargs):
#     return args
# f('sefsd', 'zs')

'''2) Создайте декоратор, который автоматически преобразует результат функции в другой тип данных,'''
# def dec(f):
#     def wrapper(*args):
#         print(type(f(*args)))
#         a = str(f(*args))
#         return type(a)

#     return wrapper

# @dec
# def sum_(*args):
#     return sum(args)
    
# print(sum_(3, 5))

'''3) Реализуйте декоратор, который ограничивает максимальное количество вызовов функции.'''

# c = 0
# ma = 3
# def dec(f):
#     def wrapper():
#         global c
#         global ma
#         c += 1
#         if c < ma:
#             f()
#         else:
#             print('Достигнут лимит')
#         return c
#     return wrapper
# @dec
# def p():
#     print('privet')  
# p()
# p()
# p()

'''4) Напишите декоратор, который автоматически логирует исключения, возникающие внутри функции.'''
# def dec(f):
#     def wrapper(*args):
#         try:
#             print(f(*args))
#         except TypeError:
#             print('Нельзя сложить строку с числом! ')
#     return wrapper
# @dec
# def r(*args):
#     sum(args)

# print(r(4, '2'))

'''5) Создайте декоратор, который выполняет аутентификацию пользователя перед вызовом функции.'''
# def dec(f):
#     def wrapper():
#         user_name = input('Введите ФИО: ')
#         f()
#     return wrapper
# @dec
# def t():
#     print(5)
# t()

'''6) Реализуйте декоратор, который изменяет значение возвращаемого результата функции, например, умножая его на определенный коэффициент.'''
# def dec(f):
#     def wrapper():
        
#         print(f() * 3.2)
#     return wrapper
# @dec
# def t():
#     return 5
# t()


'''7) Напишите декоратор, который ограничивает доступ к функции только определенным пользователям или ролям.'''
# def dec(f):
#     def wrapper():
#         a = ['директор', 'уборщик']
#         b = input('Введите свою должность: ').lower()
#         if b in a:
#             f()
#         else:
#             print('Ты не должен знать пароль!')
#     return wrapper
    
# @dec
# def t():
#     print('Пароль: qwerty1234')
# t()


'''8) Создайте декоратор, который преобразует аргументы функции в определенный формат перед её выполнением, например, в строку в верхнем регистре.'''

# def dec(f):
#     def wrapper(*args):
#         res = f(*args)
#         res = res.lower()
#         f(*args)
#         return res
#     return wrapper
    
# @dec
# def text():
#     d = 'a'
#     return d
# print(text())


'''9) Напишите декоратор, который устанавливает максимальное время выполнения функции и завершает её, если оно превышено.'''
# from datetime import datetime
# # current_datetime = datetime.now()
# # print(current_datetime.second)

# # print(current_datetime.second - 4)
# def dec(f):
#     def wrapper():
#         time = datetime.now()
#         ti = 0
#         f()

#         if datetime.now().second - 1 == time:
#             ti += 1
            
#     return wrapper

# @dec           
# def ls():
#     ls_ = []
#     for i in range(100):
#         ls_.append(i)
#     return ls_
# print(ls())






'''10) Напишите декоратор, который ограничивает доступ к функции только в определенное время суток.'''

# import datetime


# def dec(func):
#     def wrapper(*args, **kwargs):
#         if datetime.datetime.now().hour > 10 and datetime.datetime.now().hour < 18:
#             func()
#         else:
#             print('Не работает!')
#     return wrapper

# @dec
# def func():
#     print('Работает!')

# func()



# --------------------------------------------------------
# def hypotenuse(a: int, b: int) -> int:
#     '''Принимает катеты прямоугольного треугольника и возвращает гипотенузу'''
#     hypot = (a ** 2) + (b ** 2)
#     return hypot ** 0.5
# print(hypotenuse(3, 4))

# ___________________________________________________

# def taksi(k: int) -> int:
#     '''Принимает расстояние в км и возвращает сумму поездки'''
#     return round(k / 0.14 * 0.25 + 4.00, 2)
# print(taksi(4))

# _________________________________________________
 
# def delivery(k):
#     if k > 1:
#         return round((k - 1) * 2.95 + 10.95, 2)
#     elif k == 1:
#         return 10.95
#     else:
#         return 'Ошибка!'
# print(delivery(0))

# _________________________________________
# def median():
#     a = int(input('Введите число 1: '))
#     b = int(input('Введите число 2: '))
#     c = int(input('Введите число 3: '))
#     return (a + b + c ) / 3
# print(median())


# -___________________________________________
# import random
# from hw_try_anvar import chek_passw
# a = 'qwertyuiopasdfghjklzxcvbnm'
# a_upper = 'QWERTYUIOPASDFGHJKLZXCVBNM'
# nums = '1234567890'
# symbols = '!@#$%^&*()_-+=<>?/'
# all_ = a + a_upper + nums + symbols
# def password():
#     rez = 0
#     passw = ''
#     while True:
#         passw = passw + all_[random.randint(0, len(all_) - 1)]
#         if len(passw) == 10:
#             chek_passw(passw)
#             rez += 1

#             if chek_passw(passw) == 1:
#                 break
#             else: 
#                 passw = ''
                
#     print(f'Пароль: {passw}')
#     return f'Количество попыток: {rez}'
# print(password())






"""
1) Дан список list_ = [1, 2, 3, 4]. Выведите сумму всех этих чисел.
"""
# list_ = [1, 2, 3, 4]
# print(sum(list_))

"""
2) Дан списка из чисел. Проверьте, что все числа больше трёх.
"""
# list_ = [5, 4]
# res = all((map(lambda x: x > 3, list_)))
# print(res)

"""
3) Даны список из чисел. Проверьте, что в нём есть отрицательные числа.
"""
# list_ = [1, -2, 3, 4]
# res = any((map(lambda x: x < 0, list_)))
# print(res)

"""
4) Дан список, состоящий из числами. Создайте новый список, состоящий из квадратов этих чисел.
"""
# list_ = [1, 2, 3, 4]
# res = list(map(lambda x: x ** 2, list_))
# print(res)


"""
5) Дан список с числами. Отфильтруйте этот список, оставив только чётные числа.
"""
# list_ = [1, 2, 3, 4]
# res = list(filter(lambda x: x % 2 != 0, list_))
# print(res)

"""
6) Дан список, со строками. Отфильтруйте этот список, оставив только те строки, длина которых больше 7 символов.
"""
# list_ = ['Аня', 'Маша', 'Мурка', 'Асинхронность']
# res = list(filter(lambda x: len(x) > 7, list_))
# print(res)

"""
7) Дан список list_ = [5, 6, 7, 8]. Выведите произведение всех этих чисел.
"""
# import math
# list_ = [5, 6, 7, 8]
# print(math.prod(list_))
"""
😍 Дан список, с числами. Посчитате количество чётных и нечётных чисел в этом списке.
"""
# list_ = [5, 6, 7, 8, 9, 10]

# print('even:', len(list(filter(lambda x: x % 2 == 0, list_))),


# '\nodd:', len(list(filter(lambda x: x % 2 != 0, list_))))


"""
9) Дан список list_ = [-1, 2, 3, 0, 5, -3, 7,]. Если число в списке меньше 0, замените его на False, если больше, то на True .
"""
# list_ = [-1, 2, 3, 0, 5, -3, 7,]
# res = list(map(lambda x: True if x >= 0 else False, list_))
# print(res)


"""
10) Дан список из имён. Найдите самое длинное имя из списка функцией reduce.
"""
# from functools import reduce
# names = ['Мирослав', 'Роналду', 'Месси', 'Ибрагимович']
# res = reduce(lambda a, b: a if len(a) > len(b) else b, names)
# print(res)


'''1)Дано: переменная digits = '123456789'

Необходимо вывести сумму цифр, представленных в виде одного строкового значения '123456789'. Сумма этих цифр составляет 45. Напишите код, который выдаст эту её.
Подсказка: используйте генератор списка, функцию int(), функцию sum() для суммирования списка, состоящего из чисел.'''
# digits = '123456789'
# print(sum(int(i) for i in digits))

'''2) напишите лямбда функцию
которая принимает одно число, и возводит его в квадрат'''
# kvad = lambda a: a ** 2
# print(kvad(2))

'''3) напишите лямбда функцию которая принимает 2 числа, первое число возводите в степень второго числа'''
# step = lambda a, b: a ** b
# print(step(2, 2))

'''4) напишите лямбда функцию 
которая принимает список имён, и функция должна приветствовать все имена (используйте функцию map)'''
# name = lambda *args: list(input('Введите имена: ').split())
# print(map(lambda a: f'Приветсвую, дорогой {a}!', name()))

'''5) напишите лямбда функцию 
которая принимает список чисел, и она будет фильтровать этот список,то есть будет принимать только те числа которые делятся на 5, использовать встроенные функции filter, list'''
# list_ = [5, 3, 2, 7, 19, 10]
# nums = list(filter(lambda a: a % 5 == 0, list_))
# print(nums)





# __________________________________________________________

'''1) Магическими называются даты, в которых произведение дня и месяца
составляет последние две цифры года. Например, 10 июня 1960 года –
магическая дата, поскольку 10 * 6 = 60. Напишите функцию, определя-
ющую, является ли введенная дата магической. Используйте написан-
ную функцию в главной программе для отображения всех магических
дат в XX ве­ке.'''

# month = {'января': 1,
# 'февраля': 2,
# 'марта': 3,
# 'апреля': 4,
# 'мая': 5,
# 'июня': 6,
# 'июля': 7,
# 'августа': 8,
# 'сентября': 9,
# 'октября': 10,
# 'ноября': 11,
# 'декабря': 12
# }

# def magic_():
#     month_ = list(map(int, map(lambda x: month[x] if x in month else x, input('Введите дату: ').lower().strip().split())))
#     print(month_)
#     if month_[0] * month_[1] == month_[-1] % 100:
#         print('Да, дата волшебная!')
#     else:
#         print('Нет')
# def magic_()
# # ----------------------------------------------------------

# month = {1: 'января',
# 2: 'февраля',
# 3: 'марта',
# 4: 'апреля',
# 5: 'мая',
# 6: 'июня',
# 7: 'июля',
# 8: 'августа',
# 9: 'сентября',
# 10: 'октября',
# 11: 'ноября',
# 12: '12'
# }

# def datas():
#     a = []
#     for y in range(1900, 2000):
#         visokos = True if y > 0 and y % 4 == 0 or y % 400 == 0 and y % 200 != 0 else False
#         for m in range(1, 13):
#             if m == 2 and visokos == True:
#                 for d in range(1, 30):
#                     b = f'{d}.{m}.{y}'.split('.')
#                     a.append(b)
#             if m == 2 and visokos == False:
#                 for d in range(1, 29):
#                     b = f'{d}.{m}.{y}'.split('.')
#                     a.append(b)
#             if m == 1 or m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 10:
#                 for d in range(1, 32):
#                     b = f'{d}.{m}.{y}'.split('.')
#                     a.append(b)
#             if m == 4 or m == 6 or m == 9 or m == 11:
#                 for d in range(1, 31):
#                     b = f'{d}.{m}.{y}'.split('.')
#                     a.append(b)
#     # print(len(a))
#     return a
# sa = 0
# def magic_m():
#     global sa
#     for i in datas():
#         if int(i[0]) * int(i[1]) == int(i[-1]) % 100:
#             print(i[0], month[int(i[1])], i[-1])
#             sa += 1
#         else:
#             continue
#     # return sa
# magic_m()
# print(sa)



'''2) Напишите функцию для определения количества дней в конкретном ме-
сяце. Ваша функция должна принимать два параметра: номер месяца
в виде целого числа в диапазоне от 1 до 12 и год, состоящий из четырех
цифр. Убедитесь, что функция корректно обрабатывает февраль високос-
ного года. В основной программе запросите у пользователя номер месяца
и год и отобразите на экране количество дней в указанном месяце.'''

# def days_():
#     days = list(input('Введите месяц и год: ').split())
#     year = str(days[-1])
#     visokos = any(map(lambda x: True if int(x) > 0 and int(x) % 4 == 0 or int(x) % 400 == 0 and int(x) % 200 != 0 else False, year))
#     d = 0
#     if days[0] == '1' or days[0] == '3' or days[0] == '5' or days[0] == '7' or days[0] == '8' or days[0] == '10' or days[0] == '12':
#         d = 31
#     elif days[0] == '4' or days[0] == '6' or days[0] == '9' or days[0] == '11':
#         d == 30
#     elif days[0] == '2' and visokos == True:
#         d = 29 
#     elif days[0] == '2' and visokos != True:
#         d = 28
#     else:
#         return 'Вы ввели неправильную дату'
#     return f'количество дней: {d}'
    
# print(days_())

'''3) Напишите две функции с именами hex2int и int2hex для конвертации
значений из шестнадцатеричной системы счисления (0, 1, 2, 3, 4, 5, 6, 7,
8, 9, A, B, C, D, E и F) в десятичную (по основанию 10) и обратно. Функ-
ция hex2int должна принимать на вход строку с единственным символом
в шестнадцатеричной системе и преобразовывать его в число от нуля
до 15 в десятичной системе, тогда как функция int2hex будет выполнять
обратное действие – принимать десятичное число из диапазона от 0 до
15 и возвращать шестнадцатеричный эквивалент. Обе функции должны
принимать единственный параметр со входным значением и возвращать
преобразованное число. Удостоверьтесь, что функция hex2int корректно
обрабатывает буквы в верхнем и нижнем регистрах. Если введенное поль-
зователем значение выходит за допустимые границы, вы должны вывести
сообщение об ошибке.'''

# dict_ = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15}

# dict_2 = {y: k for k, y in dict_.items()}

# def hex2int(a: str) -> int:
#     '''Переводит 16-ричную в 10-ичную'''
#     try:
#         c = a[::-1]
#         b = []
#         for i in range(len(a)):
#             b.append(dict_[c[i].upper()] * (16 ** i))  
#         return sum(b)
#     except KeyError:
#         return 'Такой шестнацедиричной фигни нет!'

# print(hex2int('5a'))


# def int2hex(b: int) -> str:
#     '''Переводит 10-ичную в 16-ричную'''
#     try:
#         c = []
#         while b != 0:
#             c.append(b % 16)
#             b = b // 16
#         c = c[::-1]
#         f = ''
#         for o in c:
#             f += str(dict_2[o])
#         return f
#     except TypeError:
#         return 'Вводите только числа!'
# print(int2hex(767454))

'''4) Представьте, что в вашем регионе устаревшим является формат номер-
ных автомобильных знаков из трех букв, следом за которыми идут три
цифры. Когда все номера такого шаблона закончились, было решено об-
новить формат, поставив в начало четыре цифры, а за ними три буквы.
Напишите функцию, которая будет генерировать случайный номерной
знак. При этом номера в старом и новом форматах должны создаваться
примерно с одинаковой вероятностью. В основной программе нужно сге-
нерировать и вывести на экран случайный номерной знак.'''
# from itertools import repeat
# from string import ascii_letters, digits
# from random import choices, randint
#                 # 1 СПОСОБ
# def num_car(f = 'old'):
#     num = randint(100, 1000)
#     b = ''
#     al = [''.join(choices(ascii_letters)) for i in range(3)]
#     for i in al:
#         b += i
#     if f == 'old':
#         return b + str(num)
#     elif f == 'new':
#         return str(num) + str(randint(0, 10)) + b
# print(num_car('new'))



                # 2 СПОСОБ
# def num_car(f='n'):
#     n = randint(1000, 9999)
#     b = ''
#     for _ in range(3):
#         b += ''.join(choices(ascii_letters))
#     if f == 'n':
#         return f'{n} {b}'
#     return f'{b} {str(n)[0:-1]}'

# print(num_car())








