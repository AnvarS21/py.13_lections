'''2) Часы и минуты в секунды: Напишите функцию, которая принимает целочисленные значения часов и минут, конвертирует эти значения в секунды, а затем суммирует их и возвращает в качестве результата.'''


# from functools import reduce
                        # 1 Метод с строковмы параметром
# def sec(a):
#     a = a.split()
#     if any(map(lambda x: x.isalpha(), a)):
#         dict_ = {a[i]: int(a[i - 1]) for i in range(1, len(a), 2)}
#         if 'часа' in dict_:
#             return f"{(dict_['часа'] * 60 * 60) + (dict_['минут'] * 60)} секунд есть в {' '.join(a)}"
#         elif 'часов' in dict_:
#             return f"{(dict_['часов'] * 60 * 60) + (dict_['минут'] * 60)} секунд есть в {' '.join(a)}"
#         else:
#             return 'Непонятно!'
#     else:
#         return f"{(int(a[0])* 60 * 60) + (int(a[1]) * 60)} секунд есть в {' '.join(a)}"
# print(sec('10 часов 40 минут'))

                        # 2 метод с параметром типа integer

# def sec(a: int, b: int) -> int:
#     return a * 60 * 60 + b * 60
# print(sec(10, 40))


'''3) Возраст в дни: Напишите функцию, которая принимает возраст (количество лет) и преобразует это значение в количество дней.'''

# def age_days(n):
#     return f'Тебе {n * 365} дней!'
# print(age_days(21))

'''4) Сколько ног на ферме: Для решения этой задачи необходимо написать функцию, которая посчитает количество ног у всех животных на ферме. На ферме живут курочки, коровки, и свинки. Зная количество животных каждого вида, посчитайте, сколько всего ног у всех животных на ферме.'''

# def foot_animals(chicken=1, cow=1, pig=1):
#     foots = {'chicken': 2, 'cow': 4, 'pig': 4}
#     return f"Всего ног на ферме: {(chicken * foots['chicken']) + (cow * foots['cow']) + (pig * foots['pig'])}"

# print(foot_animals(chicken=3, cow=9, pig=3))


'''1) Реализация кэша с ограниченной емкостью: Напишите функцию, которая реализует простой кэш с ограниченной емкостью, способный хранить только определенное количество элементов. Если кэш заполнился, он должен автоматически удалять наименее используемые элементы.
'''

    
# def cash(*args):
#     list_ = [i for i in args]
#     return f'Кэш не превышен! Данные: {list_}' if len(list_) <= 5 else f'Превышен кэш! Данные: {list_[:5:]}'

# print(cash(3, 45, 34, 34, 2, 5, 32, 3, 2, 2))
    
        

